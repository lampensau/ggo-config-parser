{"version":3,"file":"static/chunks/app/page-5cfd018905ddea29.js","mappings":"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","sources":["webpack://_N_E/?a755","webpack://_N_E/./src/services/configParser.ts","webpack://_N_E/./src/components/ui/tooltip.tsx","webpack://_N_E/./src/components/Header.tsx","webpack://_N_E/./src/components/FileUploadArea.tsx","webpack://_N_E/./src/components/ErrorBoundary.tsx","webpack://_N_E/./src/components/ConfigParserApp.tsx","webpack://_N_E/./src/components/ui/card.tsx","webpack://_N_E/./src/lib/utils.ts"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/home/runner/work/ggo-config-parser/ggo-config-parser/src/components/ConfigParserApp.tsx\");\n","import { ParsedConfig, DeviceTypes, User, Device } from '@/types/config';\n\nexport const deviceTypes: DeviceTypes = {\n  258: \"BPX Beltpack\",\n  259: \"BPXSP Sports Beltpack\",\n  322: \"WBPXSP Sports Beltpack\",\n  325: \"WBPRVCBRS Beltpack\",\n  326: \"WBPRVCBRSSP Beltpack\",\n  384: \"Wallpanels Group\",\n  385: \"WPSP Wallpanel\",\n  386: \"WPHS Wallpanel\",\n  387: \"WPNA Wallpanel\",\n  388: \"WPX Wallpanel\",\n  513: \"MCD08 Desk Station\",\n  514: \"MCR12 Desk Station\",\n  515: \"MCD16 Desk Station\",\n  516: \"MCD24 Desk Station\",\n  517: \"MCD32 Desk Station\",\n  518: \"MCX Rack Station\",\n  519: \"MCXEXT Rack Channel Extension\",\n  520: \"MCXD Desk Station\",\n  521: \"MCXDEXT Desk Channel Extension\",\n  769: \"4W Interface\",\n  770: \"2W Interface\",\n  771: \"BRIDGE Interface\",\n  772: \"INTERFACEX (LCD)\",\n  773: \"INTERFACEX (TFT)\",\n  774: \"BRIDGEX Interface (LCD)\",\n  775: \"BRIDGEX Interface (TFT)\",\n  776: \"Q4WR Interface\",\n  777: \"DANTE Interface\",\n  897: \"BCN Beacon\",\n  898: \"WAA Antenna\",\n  899: \"SIRDX Interface\",\n  900: \"SI4WR Interface\",\n  901: \"SI2WR Interface\",\n  902: \"SIBR8RV Interface\"\n};\n\nexport const getDeviceTypeName = (typeId: number): string => {\n  return deviceTypes[typeId] || \"Unknown Device Type\";\n};\n\ninterface RawConfigData {\n  Settings?: {\n    Name: string;\n    configId: string;\n    MulticastAddress: string;\n    savedAtTimestamp: string;\n    binaryTimestamp: string;\n  };\n  Users?: Record<string, unknown>;\n  Network?: Record<string, unknown>;\n  Devices?: Record<string, unknown>;\n}\n\ninterface RawUserData {\n  Name: string;\n  Color: string;\n  UserId?: {\n    Type: number;\n    Id: string;\n  };\n}\n\ninterface RawDeviceData {\n  Name: string;\n  deviceType: number;\n  serialNumber: string;\n  firmwareName: string;\n  IpAddress: string;\n  macAddress: string;\n  UserId?: {\n    Type: number;\n    Id: string;\n  };\n}\n\ninterface ConfigInfoData {\n  \"Configuration Name\": string;\n  \"Configuration ID\": string;\n  \"Multicast Address\": string;\n  \"Config Timestamp\": string;\n  \"Binary Timestamp\": string;\n  \"Unassigned Devices\": number;\n}\n\nexport function parseConfigFile(fileContent: string): ParsedConfig {\n  try {\n    const data = JSON.parse(fileContent) as RawConfigData;\n\n    // Debug logging\n    console.log('Parsed data structure:', {\n      name: data.Settings?.Name,\n      id: data.Settings?.configId,\n      multicastAddress: data.Settings?.MulticastAddress,\n      timestamp: data.Settings?.savedAtTimestamp,\n      binaryTimestamp: data.Settings?.binaryTimestamp\n    });\n\n    // Validate required fields\n    if (!data.Settings?.Name || !data.Settings?.configId || !data.Settings?.MulticastAddress || !data.Settings?.savedAtTimestamp || !data.Settings?.binaryTimestamp) {\n      console.error('Missing required fields in config data:', data);\n      throw new Error('Invalid configuration file structure');\n    }\n\n    // Helper function to format dates\n    const formatDate = (dateString: string): string => {\n      try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        }).replace(',', '');\n      } catch (error) {\n        console.error('Error formatting date:', error);\n        return dateString; // Return original string if parsing fails\n      }\n    };\n\n    // Extract configuration details with proper typing\n    const configInfo: ConfigInfoData = {\n      \"Configuration Name\": data.Settings?.Name ?? 'Unknown',\n      \"Configuration ID\": (data.Settings?.configId ?? '').substring(0, 8),\n      \"Multicast Address\": data.Settings?.MulticastAddress ?? '',\n      \"Config Timestamp\": formatDate(data.Settings?.savedAtTimestamp ?? ''),\n      \"Binary Timestamp\": formatDate(data.Settings?.binaryTimestamp ?? ''),\n      \"Unassigned Devices\": 0\n    };\n\n    // Extract users and devices\n    const users = extractUsers(data.Users ?? {});\n    const deviceAssignments = extractDeviceAssignments(data.Devices ?? {});\n    const devices = extractDevices(data.Network ?? {}, deviceAssignments);\n\n    // Count unassigned devices\n    configInfo[\"Unassigned Devices\"] = devices.filter(device => device.linkedToUser === null).length;\n\n    return { configInfo, users, devices };\n  } catch (error: unknown) {\n    // Enhanced error logging\n    console.error('Error parsing config file:', error);\n    console.error('File content preview:', fileContent.substring(0, 200) + '...');\n\n    if (error instanceof Error) {\n      throw new Error(`Failed to parse config file: ${error.message}`);\n    }\n    throw new Error('Failed to parse config file');\n  }\n}\n\nconst extractUsers = (users: Record<string, unknown>): User[] => {\n  return Object.entries(users)\n    .filter(([key]) => key !== 'keys' && key !== 'badge')\n    .map(([id, userData]) => {\n      const data = userData as RawUserData;\n      return {\n        id,\n        name: data.Name,\n        color: data.Color,\n        devices: []\n      };\n    });\n};\n\nconst extractDeviceAssignments = (devices: Record<string, unknown>): { [key: string]: string } => {\n  const assignments: { [key: string]: string } = {};\n  Object.entries(devices)\n    .filter(([key]) => key !== 'keys' && key !== 'badge')\n    .forEach(([deviceId, deviceData]) => {\n      const data = deviceData as RawDeviceData;\n      if (data.UserId && data.UserId.Type === 1) {\n        const shortDeviceId = deviceId.slice(-6);\n        assignments[shortDeviceId] = data.UserId.Id.toString();\n      }\n    });\n  return assignments;\n};\n\nconst extractDevices = (devices: Record<string, unknown>, deviceAssignments: { [key: string]: string }): Device[] => {\n  return Object.entries(devices)\n    .filter(([key]) => key !== 'keys' && key !== 'badge')\n    .map(([macAddress, deviceData]) => {\n      const data = deviceData as RawDeviceData;\n      const shortDeviceId = macAddress\n        .split('-')\n        .slice(-3)\n        .join('')\n        .toUpperCase();\n\n      return {\n        name: data.Name,\n        deviceType: data.deviceType,\n        typeName: getDeviceTypeName(data.deviceType),\n        serialNumber: data.serialNumber,\n        firmware: data.firmwareName,\n        ipAddress: data.IpAddress,\n        macAddress: data.macAddress,\n        linkedToUser: deviceAssignments[shortDeviceId] || null\n      };\n    });\n};\n\nexport function parseDeviceType(deviceType: number): string {\n  return getDeviceTypeName(deviceType);\n}\n\nexport function parseDeviceData(deviceData: RawDeviceData): Device {\n  return {\n    name: deviceData.Name,\n    deviceType: deviceData.deviceType,\n    typeName: getDeviceTypeName(deviceData.deviceType),\n    serialNumber: deviceData.serialNumber,\n    firmware: deviceData.firmwareName,\n    ipAddress: deviceData.IpAddress,\n    macAddress: deviceData.macAddress,\n    linkedToUser: null\n  };\n}\n\nexport function parseUserData(userData: RawUserData): User {\n  return {\n    id: '',  // This needs to be provided externally\n    name: userData.Name,\n    color: userData.Color,\n    devices: []\n  };\n}\n\nexport function parseDeviceMacAddress(deviceData: Record<string, unknown>): string {\n  const macAddress = deviceData.macAddress as string;\n  return macAddress;\n} ","\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\nconst TooltipRoot = TooltipPrimitive.Root\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\ninterface TooltipContentProps extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> {\n  sideOffset?: number;\n}\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  TooltipContentProps\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md bg-gray-900 px-3 py-1.5 text-xs text-gray-50 animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { TooltipRoot, TooltipTrigger, TooltipContent, TooltipProvider } ","import { FileDown, RotateCcw, Sun, Moon, SunMoon } from 'lucide-react';\nimport { TooltipProvider, TooltipRoot, TooltipTrigger, TooltipContent } from '@/components/ui/tooltip';\nimport { ParsedConfig } from '@/types/config';\nimport Image from 'next/image';\n\ninterface HeaderProps {\n  parsedData: ParsedConfig | null;\n  onExport: () => void;\n  onReset: () => void;\n  theme: string | undefined;\n  onThemeChange: () => void;\n  mounted: boolean;\n}\n\nconst getBasePath = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return '/ggo-config-parser';\n  }\n  return '';\n};\n\nexport const Header: React.FC<HeaderProps> = ({\n  parsedData,\n  onExport,\n  onReset,\n  theme,\n  onThemeChange,\n  mounted\n}) => {\n  const getThemeIcon = () => {\n    if (!mounted) return null;\n    if (theme === 'dark') return <Sun className=\"w-5 h-5\" />;\n    if (theme === 'light') return <SunMoon className=\"w-5 h-5\" />;\n    return <Moon className=\"w-5 h-5\" />;\n  };\n\n  const getThemeLabel = () => {\n    if (!mounted) return 'Loading theme...';\n    if (theme === 'dark') return 'Switch to light mode';\n    if (theme === 'light') return 'Switch to system theme';\n    return 'Switch to dark mode';\n  };\n\n  return (\n    <div className=\"sticky top-0 z-10 bg-emerald-600 dark:bg-emerald-800 shadow-md\">\n      <div className=\"max-w-7xl mx-auto px-4 py-3 flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          <Image\n            src={`${getBasePath()}/logo-plain.svg`}\n            alt=\"Green-GO Logo\"\n            width={32}\n            height={32}\n            className=\"mr-2 brightness-0 invert\"\n          />\n          <h1 className=\"text-white text-xl font-semibold\">\n            Green-GO Config Parser\n          </h1>\n        </div>\n        <TooltipProvider>\n          <div className=\"flex items-center gap-3\" role=\"toolbar\" aria-label=\"Main controls\">\n            {parsedData && (\n              <>\n                <TooltipRoot>\n                  <TooltipTrigger asChild>\n                    <button\n                      className=\"p-2 bg-white dark:bg-gray-200 text-emerald-700 rounded-md hover:bg-emerald-50 dark:hover:bg-gray-300 transition-colors duration-200\"\n                      onClick={onExport}\n                      aria-label=\"Export to CSV\"\n                    >\n                      <FileDown className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </button>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    Export to CSV\n                  </TooltipContent>\n                </TooltipRoot>\n\n                <TooltipRoot>\n                  <TooltipTrigger asChild>\n                    <button\n                      className=\"p-2 bg-emerald-700 dark:bg-emerald-900 text-white rounded-md hover:bg-emerald-800 dark:hover:bg-emerald-950 transition-colors duration-200\"\n                      onClick={onReset}\n                      aria-label=\"Parse another file\"\n                    >\n                      <RotateCcw className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </button>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    Parse another file\n                  </TooltipContent>\n                </TooltipRoot>\n              </>\n            )}\n\n            <TooltipRoot>\n              <TooltipTrigger asChild>\n                <button\n                  className=\"p-2 bg-emerald-700 dark:bg-emerald-900 text-white rounded-md hover:bg-emerald-800 dark:hover:bg-emerald-950 transition-colors duration-200\"\n                  onClick={onThemeChange}\n                  aria-label={getThemeLabel()}\n                  title={getThemeLabel()}\n                >\n                  {getThemeIcon()}\n                </button>\n              </TooltipTrigger>\n              <TooltipContent>\n                {getThemeLabel()}\n              </TooltipContent>\n            </TooltipRoot>\n          </div>\n        </TooltipProvider>\n      </div>\n    </div>\n  );\n}; ","import { Upload } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\n\ninterface FileUploadAreaProps {\n  isDragging: boolean;\n  error: string | null;\n  onDrop: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragOver: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave: (e: React.DragEvent<HTMLDivElement>) => void;\n  isLoading?: boolean;\n}\n\n// Create a custom type for the simulated drag event\ntype SimulatedDragEvent = {\n  preventDefault: () => void;\n  dataTransfer: {\n    files: FileList;\n  };\n};\n\nexport const FileUploadArea: React.FC<FileUploadAreaProps> = ({\n  isDragging,\n  error,\n  onDrop,\n  onDragOver,\n  onDragLeave,\n  isLoading = false,\n}) => {\n  return (\n    <Card className=\"border-2 border-dashed\">\n      <CardContent className=\"p-6\">\n        <div\n          className={`rounded-lg p-8 text-center cursor-pointer transition-colors duration-200\n            ${isLoading ? 'opacity-50 pointer-events-none' : ''}\n            ${isDragging\n              ? 'bg-emerald-50 dark:bg-emerald-950/50 border-emerald-500'\n              : 'bg-white dark:bg-gray-800 hover:bg-emerald-50 dark:hover:bg-emerald-950/30'\n            }\n            ${error ? 'border-red-500 bg-red-50 dark:bg-red-950/50' : ''}`}\n          onDrop={onDrop}\n          onDragOver={onDragOver}\n          onDragLeave={onDragLeave}\n          onClick={() => document.getElementById('file-input')?.click()}\n          role=\"button\"\n          tabIndex={0}\n          aria-label=\"Drop zone for configuration file\"\n          onKeyPress={(e: React.KeyboardEvent) => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              document.getElementById('file-input')?.click();\n            }\n          }}\n        >\n          {isLoading ? (\n            <div className=\"animate-spin rounded-full h-8 w-8 border-4 border-emerald-500 border-t-transparent mx-auto\" />\n          ) : (\n            <input\n              type=\"file\"\n              id=\"file-input\"\n              className=\"sr-only\"\n              accept=\".gg5\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                const file = e.target.files?.[0];\n                if (file) {\n                  const fileList = new DataTransfer();\n                  fileList.items.add(file);\n                  const event: SimulatedDragEvent = {\n                    preventDefault: () => { },\n                    dataTransfer: { files: fileList.files }\n                  };\n                  onDrop(event as React.DragEvent<HTMLDivElement>);\n                }\n              }}\n              aria-label=\"Upload configuration file\"\n            />\n          )}\n          <Upload className=\"w-16 h-16 mx-auto mb-4 text-emerald-600 dark:text-emerald-400\" aria-hidden=\"true\" />\n          <p className=\"text-lg mb-2 font-medium text-gray-700 dark:text-gray-200\">\n            Drag and drop your configuration file here\n          </p>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n            (Only supports Green-GO <code>.gg5</code> configuration files)\n          </p>\n          {error && (\n            <p className=\"text-red-500 dark:text-red-400 mt-4\" role=\"alert\">{error}</p>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}; ","import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // Log to console in production\n    console.error('Error caught by boundary:', error);\n    console.error('Error info:', errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"p-4 bg-red-50 dark:bg-red-900 text-red-900 dark:text-red-50 rounded-lg\">\n          <h2 className=\"text-lg font-semibold mb-2\">Something went wrong</h2>\n          <p className=\"text-sm\">{this.state.error?.message}</p>\n          <pre className=\"mt-2 text-xs overflow-auto\">\n            {this.state.error?.stack}\n          </pre>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n} ","'use client'\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useTheme } from 'next-themes';\nimport { parseConfigFile } from '@/services/configParser';\nimport { Header } from './Header';\nimport { FileUploadArea } from './FileUploadArea';\nimport dynamic from 'next/dynamic';\nimport { ErrorBoundary } from './ErrorBoundary';\nimport type { ParsedConfig, User, Device } from '@/types/config';\n\n// Dynamic imports with proper typing\nconst ConfigDetails = dynamic(() => import('./ConfigDetails').then(mod => mod.ConfigDetails));\nconst UserDevices = dynamic(() => import('./UserDevices').then(mod => mod.UserDevices));\nconst UnassignedDevices = dynamic(() => import('./UnassignedDevices').then(mod => mod.UnassignedDevices));\n\nconst ConfigParserApp: React.FC = () => {\n  const [parsedData, setParsedData] = useState<ParsedConfig | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [originalFileName, setOriginalFileName] = useState<string | null>(null);\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n    setError(null);\n    setIsLoading(true);\n\n    const file = e.dataTransfer.files[0];\n    if (!file) {\n      setIsLoading(false);\n      return;\n    }\n\n    console.log('File being processed:', {\n      name: file.name,\n      size: file.size,\n      type: file.type\n    });\n\n    if (!file.name.endsWith('.gg5')) {\n      setError('Please upload a Green-GO .gg5 configuration file');\n      setIsLoading(false);\n      return;\n    }\n\n    setOriginalFileName(file.name);\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try {\n        console.log('File content length:', event.target?.result?.toString().length);\n        const parsed = parseConfigFile(event.target?.result as string);\n        setParsedData(parsed);\n      } catch (err) {\n        console.error('Error in file processing:', err);\n        setError(err instanceof Error ? err.message : 'Failed to parse file');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    reader.onerror = (error) => {\n      console.error('FileReader error:', error);\n      setError('Error reading file');\n      setIsLoading(false);\n    };\n\n    reader.readAsText(file);\n  }, []);\n\n  const handleDragOver = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  }, []);\n\n  const exportToCSV = useCallback(() => {\n    if (!parsedData) return;\n\n    const exportFileName = originalFileName\n      ? originalFileName.replace(/\\.(gg5|json)$/, '.csv')\n      : 'config_export.csv';\n\n    const headers = [\n      'User Name',\n      'User ID',\n      'Device Name',\n      'Device Type',\n      'Serial Number',\n      'Firmware',\n      'IP Address',\n      'MAC Address'\n    ].join(',');\n\n    const linkedDevicesRows = parsedData.users.flatMap((user: User) => {\n      const linkedDevices = parsedData.devices.filter((device: Device) => device.linkedToUser === user.id);\n\n      if (linkedDevices.length > 0) {\n        return linkedDevices.map((device: Device) => [\n          user.name,\n          user.id,\n          device.name,\n          device.typeName,\n          device.serialNumber,\n          device.firmware,\n          device.ipAddress,\n          device.macAddress\n        ].map(field => `\"${field || ''}\"`).join(','));\n      }\n\n      return [[\n        user.name,\n        user.id,\n        '', '', '', '', '', ''\n      ].map(field => `\"${field || ''}\"`).join(',')];\n    });\n\n    const unlinkedDevicesRows = parsedData.devices\n      .filter((device: Device) => device.linkedToUser === null)\n      .map((device: Device) => [\n        '', '',\n        device.name,\n        device.typeName,\n        device.serialNumber,\n        device.firmware,\n        device.ipAddress,\n        device.macAddress\n      ].map(field => `\"${field || ''}\"`).join(','));\n\n    const csvContent = [headers, ...linkedDevicesRows, ...unlinkedDevicesRows].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', exportFileName);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, [parsedData, originalFileName]);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleThemeChange = () => {\n    if (theme === 'dark') setTheme('light');\n    else if (theme === 'light') setTheme('system');\n    else setTheme('dark');\n  };\n\n  return (\n    <div className=\"min-h-full\" role=\"main\">\n      <Header\n        parsedData={parsedData}\n        onExport={exportToCSV}\n        onReset={() => {\n          setParsedData(null);\n          setError(null);\n        }}\n        theme={theme}\n        onThemeChange={handleThemeChange}\n        mounted={mounted}\n      />\n      <ErrorBoundary>\n        <div className=\"max-w-7xl mx-auto px-4 py-6\">\n          {!parsedData ? (\n            <FileUploadArea\n              isDragging={isDragging}\n              error={error}\n              onDrop={handleDrop}\n              onDragOver={handleDragOver}\n              onDragLeave={handleDragLeave}\n              isLoading={isLoading}\n            />\n          ) : (\n            <div className=\"space-y-6\">\n              <ConfigDetails configInfo={parsedData.configInfo} />\n\n              {parsedData.users.map(user => (\n                <UserDevices\n                  key={user.id}\n                  user={user}\n                  devices={parsedData.devices}\n                />\n              ))}\n\n              <UnassignedDevices devices={parsedData.devices} />\n            </div>\n          )}\n        </div>\n      </ErrorBoundary>\n    </div>\n  );\n};\n\nexport default ConfigParserApp; ","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)}\n      {...props}\n    />\n  )\n)\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n      {...props}\n    />\n  )\n)\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<HTMLHeadingElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h3\n      ref={ref}\n      className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)}\n      {...props}\n    />\n  )\n)\nCardTitle.displayName = \"CardTitle\"\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n  )\n)\nCardContent.displayName = \"CardContent\"\n\nexport { Card, CardHeader, CardTitle, CardContent } ","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\n/**\n * Combines multiple class names using clsx and merges Tailwind classes using tailwind-merge\n * @param inputs - Class names to combine\n * @returns Merged class names string\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} "],"names":["deviceTypes","typeId","extractUsers","Object","entries","users","filter","key","map","id","userData","name","data","Name","color","Color","devices","extractDeviceAssignments","assignments","forEach","deviceId","deviceData","UserId","Type","slice","Id","toString","extractDevices","deviceAssignments","macAddress","shortDeviceId","split","join","toUpperCase","deviceType","typeName","getDeviceTypeName","serialNumber","firmware","firmwareName","ipAddress","IpAddress","linkedToUser","TooltipProvider","TooltipPrimitive","TooltipRoot","TooltipTrigger","TooltipContent","React","ref","className","sideOffset","props","cn","displayName","getBasePath","Header","parsedData","onExport","onReset","theme","onThemeChange","mounted","getThemeLabel","div","Image","src","alt","width","height","h1","role","aria-label","asChild","button","onClick","FileDown","aria-hidden","RotateCcw","title","getThemeIcon","Sun","SunMoon","Moon","FileUploadArea","isDragging","error","onDrop","onDragOver","onDragLeave","isLoading","Card","CardContent","document","getElementById","click","tabIndex","onKeyPress","e","input","type","accept","onChange","file","target","files","fileList","DataTransfer","items","add","preventDefault","event","dataTransfer","Upload","p","code","ErrorBoundary","getDerivedStateFromError","hasError","componentDidCatch","errorInfo","console","render","state","h2","message","pre","stack","children","constructor","ConfigDetails","dynamic","then","mod","UserDevices","UnassignedDevices","setParsedData","useState","setError","ConfigParserApp","setIsDragging","originalFileName","setOriginalFileName","setTheme","useTheme","setMounted","setIsLoading","handleDrop","useCallback","log","size","endsWith","reader","FileReader","onload","result","length","parsed","parseConfigFile","JSON","parse","fileContent","Settings","configId","multicastAddress","MulticastAddress","timestamp","savedAtTimestamp","binaryTimestamp","Error","formatDate","Date","dateString","toLocaleDateString","year","month","day","hour","minute","hour12","replace","configInfo","substring","Users","Devices","Network","device","err","onerror","readAsText","handleDragOver","handleDragLeave","exportToCSV","exportFileName","blob","Blob","flatMap","linkedDevices","user","field","link","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","removeChild","useEffect","handleThemeChange","CardHeader","CardTitle","h3","inputs","twMerge","clsx"],"sourceRoot":"","ignoreList":[]}